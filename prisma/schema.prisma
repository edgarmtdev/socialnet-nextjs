// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id                   String    @id @default(auto()) @map("_id") @db.ObjectId
    idProvider           String
    provider             String
    name                 String?
    email                String?   @unique
    profilePic           String
    background           String?
    birthday             String?
    gender               GENDER?
    currentCity          String?
    country              String?
    job                  String?
    highSchool           String?
    university           String?
    phoneNumber          String?   @default("000-000-0000")
    age                  Int?
    posts                Post[]    @relation(name: "author")
    comments             Comment[]
    likes                Post[]    @relation(name: "likes", fields: [likesPostsIDs], references: [id])
    likesPostsIDs        String[]  @db.ObjectId
    friends              User[]    @relation(name: "friends", fields: [friendsIDs], references: [id])
    friendsIDs           String[]  @db.ObjectId
    friendOf             User[]    @relation(name: "friends", fields: [friendOfIDs], references: [id])
    friendOfIDs          String[]  @db.ObjectId
    friendshipReqSend    User[]    @relation(name: "friendshipReq", fields: [friendshipReqSendIDs], references: [id])
    friendshipReqSendIDs String[]  @db.ObjectId
    friendshipReqRec     User[]    @relation(name: "friendshipReq", fields: [friendshipReqRecIDs], references: [id])
    friendshipReqRecIDs  String[]  @db.ObjectId
}

model Post {
    id           String    @id @default(auto()) @map("_id") @db.ObjectId
    createdAt    DateTime  @default(now())
    content      String
    image        String
    author       User      @relation(name: "author", fields: [authorId], references: [id]) //fields -> ref a el mismo model, references -> ref al model externo
    authorId     String    @db.ObjectId
    likes        User[]    @relation(name: "likes", fields: [likesUserIDs], references: [id])
    likesUserIDs String[]  @db.ObjectId
    comments     Comment[]
}

model Comment {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    body     String
    author   User   @relation(fields: [authorId], references: [id])
    authorId String @db.ObjectId
    post     Post   @relation(fields: [postId], references: [id])
    postId   String @db.ObjectId
}

enum GENDER {
    FEMALE
    MALE
    UNSPECIFIED
}
